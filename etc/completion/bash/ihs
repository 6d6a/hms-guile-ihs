# Guile IHS --- IHS command-line interface.
# Copyright Â© 2019 Oleg Pykhalov <go.wigust@gmail.com>
#
# This file is part of Guile IHS.
#
# Guile IHS is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or (at
# your option) any later version.
#
# Guile IHS is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Guile IHS.  If not, see <http://www.gnu.org/licenses/>.

# Bash completion for Guile IHS commands.

_ihs_is_command ()
{
    local word
    local result="false"
    for word in ${COMP_WORDS[*]}
    do
	if [ "$word" = "$1" ]
	then
	    result=true
	    break
	fi
    done
    $result
}

_ihs_complete_subcommand ()
{
    local command="${COMP_WORDS[1]}"
    local subcommands="$(${COMP_WORDS[0]} $command --help 2> /dev/null \
                         | grep '^   [a-z]' \
                         | sed -e's/^ \+\([a-z-]\+\).*$/\1/g')"
    COMPREPLY=($(compgen -W "$subcommands" -- "${COMP_WORDS[$COMP_CWORD]}"))
}

_ihs_complete_option ()
{
    local subcommand
    case "${COMP_WORDS[2]}" in
	-*)     subcommand="";;
	[a-z]*) subcommand="${COMP_WORDS[2]}";;
    esac
    local options="$(${COMP_WORDS[0]} ${COMP_WORDS[1]} $subcommand --help 2> /dev/null \
                            | grep '^  \+-' \
                            | sed -e's/^.*--\([a-zA-Z0-9_-]\+\)\(=\?\).*/--\1\2/g')"
    compopt -o nospace
    COMPREPLY=($(compgen -W "$options" -- "${COMP_WORDS[${#COMP_WORDS[*]} - 1]}"))
}

declare _ihs_subcommands

_ihs_complete ()
{
    local word_count=${#COMP_WORDS[*]}
    local word_at_point="${COMP_WORDS[$COMP_CWORD]}"

    if [ "$COMP_CWORD" -gt 1 ]
    then
	case "$word_at_point" in
	    -*)
		_ihs_complete_option "$word_at_point"
		return
		;;
	esac
    fi

    case $COMP_CWORD in
	1)
	    if [ -z "$_ihs_subcommands" ]
	    then
		# Cache the list of subcommands to speed things up.
		_ihs_subcommands="$(ihs --help 2> /dev/null \
                                     | grep '^  ' | cut -c 2-)"
	    fi
	    COMPREPLY=($(compgen -W "$_ihs_subcommands" -- "$word_at_point"))
	    ;;
	*)
	    if _ihs_is_command "web" || _ihs_is_command "vm"
	    then
		case $COMP_CWORD in
		    2) _ihs_complete_subcommand;;
		esac
	    fi
	    ;;
    esac
}

complete -F _ihs_complete ihs
